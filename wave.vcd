$version Generated by VerilatedVcd $end
$date Tue Oct 15 21:06:37 2019
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 o alu_ci $end
  $var wire  1 n alu_comp_b $end
  $var wire  2 m alu_func [1:0] $end
  $var wire  2 p alu_reg_a [1:0] $end
  $var wire  2 q alu_reg_b [1:0] $end
  $var wire  1 r alu_so $end
  $var wire  1 s alu_uo $end
  $var wire  1 h mar_we $end
  $var wire  1 l mbr_alu $end
  $var wire  1 j mbr_in_we $end
  $var wire  1 i mbr_out_we $end
  $var wire  1 k mem_we $end
  $var wire  2 f reg_addr_we [1:0] $end
  $var wire  1 g reg_we $end
  $var wire  1 e reset $end
  $scope module top $end
   $var wire 32 | N [31:0] $end
   $var wire  8 ` addr_out [7:0] $end
   $var wire  8 $ alu_a [7:0] $end
   $var wire  8 % alu_b [7:0] $end
   $var wire  1 o alu_ci $end
   $var wire  1 n alu_comp_b $end
   $var wire  2 m alu_func [1:0] $end
   $var wire  8 & alu_q [7:0] $end
   $var wire  2 p alu_reg_a [1:0] $end
   $var wire  2 q alu_reg_b [1:0] $end
   $var wire  1 r alu_so $end
   $var wire  1 s alu_uo $end
   $var wire  8 Q d_in [7:0] $end
   $var wire  8 _ d_out [7:0] $end
   $var wire  1 h mar_we $end
   $var wire  1 l mbr_alu $end
   $var wire  8 ^ mbr_in [7:0] $end
   $var wire  1 j mbr_in_we $end
   $var wire  1 i mbr_out_we $end
   $var wire  1 k mem_we $end
   $var wire  2 f reg_addr_we [1:0] $end
   $var wire  8 ' reg_in [7:0] $end
   $var wire  1 g reg_we $end
   $var wire  8 R regout(0) [7:0] $end
   $var wire  8 S regout(1) [7:0] $end
   $var wire  8 T regout(2) [7:0] $end
   $var wire  8 U regout(3) [7:0] $end
   $var wire  4 # regwe [3:0] $end
   $var wire  1 e reset $end
   $scope module alu_inst $end
    $var wire 32 | N [31:0] $end
    $var wire  8 $ a [7:0] $end
    $var wire  8 % b [7:0] $end
    $var wire  9 , cc [8:0] $end
    $var wire  1 o ci $end
    $var wire  1 n comp $end
    $var wire  2 m f [1:0] $end
    $var wire  8 & q [7:0] $end
    $var wire  1 r so $end
    $var wire  1 s uo $end
    $scope module genblk1(0) $end
     $scope module a_inst $end
      $var wire  1 . a $end
      $var wire  1 / b $end
      $var wire  1 - ci $end
      $var wire  1 t co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 0 q $end
     $upscope $end
    $upscope $end
    $scope module genblk1(1) $end
     $scope module a_inst $end
      $var wire  1 2 a $end
      $var wire  1 3 b $end
      $var wire  1 1 ci $end
      $var wire  1 u co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 4 q $end
     $upscope $end
    $upscope $end
    $scope module genblk1(2) $end
     $scope module a_inst $end
      $var wire  1 6 a $end
      $var wire  1 7 b $end
      $var wire  1 5 ci $end
      $var wire  1 v co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 8 q $end
     $upscope $end
    $upscope $end
    $scope module genblk1(3) $end
     $scope module a_inst $end
      $var wire  1 : a $end
      $var wire  1 ; b $end
      $var wire  1 9 ci $end
      $var wire  1 w co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 < q $end
     $upscope $end
    $upscope $end
    $scope module genblk1(4) $end
     $scope module a_inst $end
      $var wire  1 > a $end
      $var wire  1 ? b $end
      $var wire  1 = ci $end
      $var wire  1 x co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 @ q $end
     $upscope $end
    $upscope $end
    $scope module genblk1(5) $end
     $scope module a_inst $end
      $var wire  1 B a $end
      $var wire  1 C b $end
      $var wire  1 A ci $end
      $var wire  1 y co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 D q $end
     $upscope $end
    $upscope $end
    $scope module genblk1(6) $end
     $scope module a_inst $end
      $var wire  1 F a $end
      $var wire  1 G b $end
      $var wire  1 E ci $end
      $var wire  1 z co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 H q $end
     $upscope $end
    $upscope $end
    $scope module genblk1(7) $end
     $scope module a_inst $end
      $var wire  1 J a $end
      $var wire  1 K b $end
      $var wire  1 I ci $end
      $var wire  1 { co $end
      $var wire  1 n comp $end
      $var wire  2 m f [1:0] $end
      $var wire  1 L q $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module amux_inst $end
    $var wire 32 | N [31:0] $end
    $var wire  2 p a [1:0] $end
    $var wire  8 V i0 [7:0] $end
    $var wire  8 W i1 [7:0] $end
    $var wire  8 X i2 [7:0] $end
    $var wire  8 Y i3 [7:0] $end
    $var wire  8 $ o [7:0] $end
   $upscope $end
   $scope module bmux_inst $end
    $var wire 32 | N [31:0] $end
    $var wire  2 q a [1:0] $end
    $var wire  8 Z i0 [7:0] $end
    $var wire  8 [ i1 [7:0] $end
    $var wire  8 \ i2 [7:0] $end
    $var wire  8 ] i3 [7:0] $end
    $var wire  8 % o [7:0] $end
   $upscope $end
   $scope module demux_inst $end
    $var wire 32 } N [31:0] $end
    $var wire  2 f a [1:0] $end
    $var wire  1 g i $end
    $var wire  1 ( o0 [0:0] $end
    $var wire  1 ) o1 [0:0] $end
    $var wire  1 * o2 [0:0] $end
    $var wire  1 + o3 [0:0] $end
   $upscope $end
   $scope module reg_mux $end
    $var wire 32 | N [31:0] $end
    $var wire  1 l a $end
    $var wire  8 & i0 [7:0] $end
    $var wire  8 ^ i1 [7:0] $end
    $var wire  8 ' o [7:0] $end
   $upscope $end
   $scope module register_file(0) $end
    $scope module register_inst $end
     $var wire 32 | N [31:0] $end
     $var wire  8 ' din [7:0] $end
     $var wire  8 a do_r [7:0] $end
     $var wire  8 a dout [7:0] $end
     $var wire  1 e reset $end
     $var wire  1 M we $end
    $upscope $end
   $upscope $end
   $scope module register_file(1) $end
    $scope module register_inst $end
     $var wire 32 | N [31:0] $end
     $var wire  8 ' din [7:0] $end
     $var wire  8 b do_r [7:0] $end
     $var wire  8 b dout [7:0] $end
     $var wire  1 e reset $end
     $var wire  1 N we $end
    $upscope $end
   $upscope $end
   $scope module register_file(2) $end
    $scope module register_inst $end
     $var wire 32 | N [31:0] $end
     $var wire  8 ' din [7:0] $end
     $var wire  8 c do_r [7:0] $end
     $var wire  8 c dout [7:0] $end
     $var wire  1 e reset $end
     $var wire  1 O we $end
    $upscope $end
   $upscope $end
   $scope module register_file(3) $end
    $scope module register_inst $end
     $var wire 32 | N [31:0] $end
     $var wire  8 ' din [7:0] $end
     $var wire  8 d do_r [7:0] $end
     $var wire  8 d dout [7:0] $end
     $var wire  1 e reset $end
     $var wire  1 P we $end
    $upscope $end
   $upscope $end
   $scope module umar $end
    $var wire 32 | N [31:0] $end
    $var wire  8 & din [7:0] $end
    $var wire  8 ` do_r [7:0] $end
    $var wire  8 ` dout [7:0] $end
    $var wire  1 e reset $end
    $var wire  1 h we $end
   $upscope $end
   $scope module umbr_in $end
    $var wire 32 | N [31:0] $end
    $var wire  8 Q din [7:0] $end
    $var wire  8 ^ do_r [7:0] $end
    $var wire  8 ^ dout [7:0] $end
    $var wire  1 e reset $end
    $var wire  1 j we $end
   $upscope $end
   $scope module umbr_out $end
    $var wire 32 | N [31:0] $end
    $var wire  8 & din [7:0] $end
    $var wire  8 _ do_r [7:0] $end
    $var wire  8 _ dout [7:0] $end
    $var wire  1 e reset $end
    $var wire  1 i we $end
   $upscope $end
   $scope module umem $end
    $var wire 32 | N [31:0] $end
    $var wire  8 ` ain [7:0] $end
    $var wire  8 _ din [7:0] $end
    $var wire  8 Q dout [7:0] $end
    $var wire  1 k we $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b0000 #
b00000000 $
b00000000 %
b00000000 &
b00000000 '
b0 (
b0 )
b0 *
b0 +
b000000000 ,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
b00000000 Q
b00000000 R
b00000000 S
b00000000 T
b00000000 U
b00000000 V
b00000000 W
b00000000 X
b00000000 Y
b00000000 Z
b00000000 [
b00000000 \
b00000000 ]
b00000000 ^
b00000000 _
b00000000 `
b00000000 a
b00000000 b
b00000000 c
b00000000 d
0e
b00 f
0g
0h
0i
0j
0k
0l
b00 m
0n
0o
b00 p
b00 q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
b00000000000000000000000000001000 |
b00000000000000000000000000000001 }
#2
#3
#4
#5
1e
#6
#7
#8
#9
#10
0e
#11
#12
#13
#14
#15
#16
#17
#18
#19
#20
#21
#22
#23
#24
#25
#26
#27
#28
#29
#30
b00000001 &
b00000001 '
b000000001 ,
1-
10
b01 f
1o
b01 p
b01 q
#31
#32
#33
#34
#35
b0010 #
b1 )
1N
1g
b00 p
b00 q
#36
#37
#38
#39
#40
b0000 #
b00000001 $
b00000001 %
b00000011 &
b00000011 '
b0 )
b000000011 ,
1.
1/
11
14
0N
b00000001 S
b00000001 W
b00000001 [
b00000001 b
0g
b01 p
b01 q
1t
#41
#42
#43
#44
#45
b00000010 &
b00000010 '
b000000010 ,
0-
00
b10 f
0o
#46
#47
#48
#49
#50
b0100 #
b1 *
1O
1g
#51
#52
#53
#54
#55
#56
#57
#58
#59
#60
b1000 #
b00000010 $
b00000010 %
b00000101 &
b00000101 '
b0 *
b1 +
b000000101 ,
1-
0.
0/
10
01
12
13
04
15
18
0O
1P
b00000010 T
b00000010 X
b00000010 \
b00000010 c
b11 f
1o
b10 p
b10 q
0t
1u
#61
#62
#63
#64
#65
b0001 #
b00000101 $
b00000000 %
b00000110 &
b00000110 '
b1 (
b0 +
b000000011 ,
1.
00
11
02
03
14
05
16
1M
0P
b00000101 U
b00000101 Y
b00000101 ]
b00000101 d
b00 f
b11 p
b00 q
1t
0u
#66
#67
#68
#69
#70
b1000 #
b00000110 $
b00000101 %
b00001100 &
b00001100 '
b0 (
b1 +
b000001111 ,
0.
1/
12
04
15
17
19
1<
0M
1P
b00000110 R
b00000110 V
b00000110 Z
b00000110 a
b11 f
b00 p
b11 q
1u
1v
#71
#72
#73
#74
#75
b0001 #
b00001100 $
b00000110 %
b00010011 &
b00010011 '
b1 (
b0 +
b000011001 ,
0/
10
01
02
13
14
05
08
1:
0<
1=
1@
1M
0P
b00001100 U
b00001100 Y
b00001100 ]
b00001100 d
b00 f
b11 p
b00 q
0t
0u
1w
#76
#77
#78
#79
#80
b1000 #
b00010011 $
b00001100 %
b00100000 &
b00100000 '
b0 (
b1 +
b000111111 ,
1.
00
11
12
03
04
15
06
0:
1;
1>
0@
1A
1D
0M
1P
b00010011 R
b00010011 V
b00010011 Z
b00010011 a
b11 f
b00 p
b11 q
1t
1u
1x
#81
#82
#83
#84
#85
b0001 #
b00100000 $
b00010011 %
b00110100 &
b00110100 '
b1 (
b0 +
b000000111 ,
0.
1/
02
13
07
18
09
0;
0=
0>
1?
1@
0A
1B
1M
0P
b00100000 U
b00100000 Y
b00100000 ]
b00100000 d
b00 f
b11 p
b00 q
0v
0w
0x
#86
#87
#88
#89
#90
b1000 #
b00110100 $
b00100000 %
b01010101 &
b01010101 '
b0 (
b1 +
b001000001 ,
0/
10
01
03
05
16
1>
0?
1C
0D
1E
1H
0M
1P
b00110100 R
b00110100 V
b00110100 Z
b00110100 a
b11 f
b00 p
b11 q
0t
0u
1y
#91
#92
#93
#94
#95
b00000010 $
b00000001 %
b00000100 &
b00000100 '
b000000111 ,
1/
00
11
12
15
06
0>
0@
0B
0C
0E
0H
b10 p
b01 q
1t
1u
0y
#96
#97
#98
#99
#100
b00110100 $
b00000010 %
b00110111 &
b00110111 '
b000000001 ,
0/
10
01
02
13
14
05
16
1>
1@
1B
1D
b00 p
b10 q
0t
0u
#101
#102
#103
#104
#105
b0001 #
b00110111 $
b00111010 &
b00111010 '
b1 (
b0 +
b000001111 ,
1.
00
11
12
15
08
19
1<
1M
0P
b00110111 U
b00110111 Y
b00110111 ]
b00110111 d
b00 f
b11 p
1t
1u
1v
#106
#107
#108
#109
#110
b1000 #
b00111010 $
b00111101 &
b00111101 '
b0 (
b1 +
b000000101 ,
0.
10
01
04
06
18
09
1:
0M
1P
b00111010 R
b00111010 V
b00111010 Z
b00111010 a
b11 f
b00 p
0t
0v
#111
#112
#113
#114
#115
b0001 #
b00111101 $
b01000000 &
b01000000 '
b1 (
b0 +
b001111111 ,
1.
00
11
02
16
08
19
0<
1=
0@
1A
0D
1E
1H
1M
0P
b00111101 U
b00111101 Y
b00111101 ]
b00111101 d
b00 f
b11 p
1t
1v
1w
1x
1y
#116
#117
#118
#119
#120
b0000 #
b01000000 $
b01000000 %
b10000000 &
b10000000 '
b0 (
b010000000 ,
0-
0.
01
03
05
06
09
0:
0=
0>
0A
0B
0E
1F
1G
0H
1I
1L
0M
b01000000 R
b01000000 V
b01000000 Z
b01000000 a
b01 f
0g
1h
0o
b00 p
b00 q
1r
0t
0u
0v
0w
0x
0y
1z
#121
#122
#123
#124
#125
b10000000 `
0h
#126
#127
#128
#129
#130
b00000001 %
b01000001 &
b01000001 '
b000000000 ,
1/
10
0G
1H
0I
0L
b10 f
1i
b01 q
0r
0z
#131
#132
#133
#134
#135
b01000001 _
b01 f
0i
#136
#137
#138
#139
#140
1k
#141
#142
#143
#144
#145
b01000001 Q
0k
#146
#147
#148
#149
#150
b1000 #
b00000001 $
b00000011 &
b00000011 '
b1 +
b000000011 ,
1-
1.
11
14
0F
0H
1P
b11 f
1g
1o
b01 p
1t
#151
#152
#153
#154
#155
b0001 #
b01000000 $
b01000001 &
b01000001 '
b1 (
b0 +
b000000000 ,
0-
0.
01
04
1F
1H
1M
0P
b00000011 U
b00000011 Y
b00000011 ]
b00000011 d
b00 f
0o
b00 p
0t
#156
#157
#158
#159
#160
b0000 #
b01000001 $
b01000001 %
b10000010 &
b10000010 '
b0 (
b010000010 ,
1.
00
11
14
1G
0H
1I
1L
0M
b01000001 R
b01000001 V
b01000001 Z
b01000001 a
b01 f
0g
1h
b00 q
1r
1t
1z
#161
#162
#163
#164
#165
b00000000 Q
b10000010 `
0h
#166
#167
#168
#169
#170
b00000001 %
b01000010 &
b01000010 '
b000000010 ,
0G
1H
0I
0L
b10 f
1i
b01 q
0r
0z
#171
#172
#173
#174
#175
b01000010 _
b01 f
0i
#176
#177
#178
#179
#180
1k
#181
#182
#183
#184
#185
b01000010 Q
0k
#186
#187
#188
#189
#190
b1000 #
b00000001 $
b00000011 &
b00000011 '
b1 +
b000000011 ,
1-
10
0F
0H
1P
b11 f
1g
1o
b01 p
#191
#192
#193
#194
#195
b0001 #
b01000001 $
b01000010 &
b01000010 '
b1 (
b0 +
b000000010 ,
0-
00
1F
1H
1M
0P
b00 f
0o
b00 p
#196
#197
#198
#199
#200
b0000 #
b01000010 $
b01000010 %
b10000100 &
b10000100 '
b0 (
b010000100 ,
0.
0/
01
12
13
04
15
18
1G
0H
1I
1L
0M
b01000010 R
b01000010 V
b01000010 Z
b01000010 a
b01 f
0g
1h
b00 q
1r
0t
1u
1z
#201
#202
#203
#204
#205
b00000000 Q
b10000100 `
0h
#206
#207
#208
#209
#210
b00000001 %
b01000011 &
b01000011 '
b000000000 ,
1/
10
03
14
05
08
0G
1H
0I
0L
b10 f
1i
b01 q
0r
0u
0z
#211
#212
#213
#214
#215
b01000011 _
b01 f
0i
#216
#217
#218
#219
#220
1k
#221
#222
#223
#224
#225
b01000011 Q
0k
#226
#227
#228
#229
#230
b1000 #
b00000001 $
b00000011 &
b00000011 '
b1 +
b000000011 ,
1-
1.
11
02
0F
0H
1P
b11 f
1g
1o
b01 p
1t
#231
#232
#233
#234
#235
b0001 #
b01000010 $
b01000011 &
b01000011 '
b1 (
b0 +
b000000000 ,
0-
0.
01
12
1F
1H
1M
0P
b00 f
0o
b00 p
0t
#236
#237
#238
#239
#240
b0000 #
b01000011 $
b01000011 %
b10000110 &
b10000110 '
b0 (
b010000110 ,
1.
00
11
13
15
18
1G
0H
1I
1L
0M
b01000011 R
b01000011 V
b01000011 Z
b01000011 a
b01 f
0g
1h
b00 q
1r
1t
1u
1z
#241
#242
#243
#244
#245
b00000000 Q
b10000110 `
0h
#246
#247
#248
#249
#250
b00000001 %
b01000100 &
b01000100 '
b000000110 ,
03
04
0G
1H
0I
0L
b10 f
1i
b01 q
0r
0z
#251
#252
#253
#254
#255
b01000100 _
b01 f
0i
#256
#257
#258
#259
#260
1k
#261
#262
#263
#264
#265
b01000100 Q
0k
#266
#267
#268
#269
#270
b1000 #
b00000001 $
b00000011 &
b00000011 '
b1 +
b000000011 ,
1-
10
02
14
05
08
0F
0H
1P
b11 f
1g
1o
b01 p
0u
#271
#272
#273
#274
#275
b0001 #
b01000011 $
b01000100 &
b01000100 '
b1 (
b0 +
b000000110 ,
0-
00
12
04
15
18
1F
1H
1M
0P
b00 f
0o
b00 p
1u
#276
#277
#278
#279
#280
b0000 #
b01000100 $
b01000100 %
b10001000 &
b10001000 '
b0 (
b010001000 ,
0.
0/
01
02
05
16
17
08
19
1<
1G
0H
1I
1L
0M
b01000100 R
b01000100 V
b01000100 Z
b01000100 a
b01 f
0g
1h
b00 q
1r
0t
0u
1v
1z
#281
#282
#283
#284
#285
b00000000 Q
b10001000 `
0h
#286
#287
#288
#289
#290
b00000001 %
b01000101 &
b01000101 '
b000000000 ,
1/
10
07
18
09
0<
0G
1H
0I
0L
b10 f
1i
b01 q
0r
0v
0z
#291
#292
#293
#294
#295
b01000101 _
b01 f
0i
#296
#297
#298
#299
#300
1k
#301
#302
#303
#304
#305
b01000101 Q
0k
#306
#307
#308
#309
#310
b1000 #
b00000001 $
b00000011 &
b00000011 '
b1 +
b000000011 ,
1-
1.
11
14
06
08
0F
0H
1P
b11 f
1g
1o
b01 p
1t
#311
#312
#313
#314
#315
b0001 #
b01000100 $
b01000101 &
b01000101 '
b1 (
b0 +
b000000000 ,
0-
0.
01
04
16
18
1F
1H
1M
0P
b00 f
0o
b00 p
0t
#316
#317
#318
#319
#320
b0000 #
b01000101 $
b01000101 %
b10001010 &
b10001010 '
b0 (
b010001010 ,
1.
00
11
14
17
08
19
1<
1G
0H
1I
1L
0M
b01000101 R
b01000101 V
b01000101 Z
b01000101 a
b01 f
0g
1h
b00 q
1r
1t
1v
1z
#321
#322
#323
#324
#325
b00000000 Q
b10001010 `
0h
#326
#327
#328
#329
#330
b00000001 %
b01000110 &
b01000110 '
b000000010 ,
07
18
09
0<
0G
1H
0I
0L
b10 f
1i
b01 q
0r
0v
0z
#331
#332
#333
#334
#335
b01000110 _
b01 f
0i
#336
#337
#338
#339
#340
1k
#341
#342
#343
#344
#345
b01000110 Q
0k
#346
#347
#348
#349
#350
b1000 #
b00000001 $
b00000011 &
b00000011 '
b1 +
b000000011 ,
1-
10
06
08
0F
0H
1P
b11 f
1g
1o
b01 p
#351
#352
#353
#354
#355
b0001 #
b01000101 $
b01000110 &
b01000110 '
b1 (
b0 +
b000000010 ,
0-
00
16
18
1F
1H
1M
0P
b00 f
0o
b00 p
#356
#357
#358
#359
#360
b0000 #
b01000110 $
b01000110 %
b10001100 &
b10001100 '
b0 (
b010001100 ,
0.
0/
01
12
13
04
15
17
19
1<
1G
0H
1I
1L
0M
b01000110 R
b01000110 V
b01000110 Z
b01000110 a
b01 f
0g
1h
b00 q
1r
0t
1u
1v
1z
#361
#362
#363
#364
#365
b00000000 Q
b10001100 `
0h
#366
#367
#368
#369
#370
b00000001 %
b01000111 &
b01000111 '
b000000000 ,
1/
10
03
14
05
07
09
0<
0G
1H
0I
0L
1i
b01 q
0r
0u
0v
0z
#371
#372
#373
#374
#375
b01000111 _
0i
#376
#377
#378
#379
#380
1k
#381
#382
#383
#384
#385
b01000111 Q
0k
#386
#387
#388
#389
#390
b1000 #
b00000001 $
b00000011 &
b00000011 '
b1 +
b000000011 ,
1-
1.
11
02
06
08
0F
0H
1P
b11 f
1g
1o
b01 p
1t
#391
#392
#393
#394
#395
b0001 #
b01000110 $
b01000111 &
b01000111 '
b1 (
b0 +
b000000000 ,
0-
0.
01
12
16
18
1F
1H
1M
0P
b00 f
0o
b00 p
0t
#396
#397
#398
#399
#400
b0000 #
b01000111 $
b01000111 %
b10001110 &
b10001110 '
b0 (
b010001110 ,
1.
00
11
13
15
17
19
1<
1G
0H
1I
1L
0M
b01000111 R
b01000111 V
b01000111 Z
b01000111 a
b01 f
0g
1h
b00 q
1r
1t
1u
1v
1z
#401
#402
#403
#404
#405
b00000000 Q
b10001110 `
0h
#406
#407
#408
#409
#410
b00000001 %
b01001000 &
b01001000 '
b000001110 ,
03
04
07
08
0G
1H
0I
0L
b10 f
1i
b01 q
0r
0z
#411
#412
#413
#414
#415
b01001000 _
b01 f
0i
#416
#417
#418
#419
#420
1k
#421
#422
#423
#424
#425
b01001000 Q
0k
#426
#427
#428
#429
#430
b00000001 $
b01000111 %
02
13
06
17
0F
1G
b11 f
b01 p
b00 q
#431
#432
#433
#434
